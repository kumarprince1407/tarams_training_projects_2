{"ast":null,"code":"//reducer.js\n//import store from \"../redux/store\";\nimport axios from \"axios\";\n\n//\nimport { thunk } from \"redux-thunk\";\nimport { Middleware } from \"redux\";\n//\n\n// Action types\nconst ADD_TASK_REQUEST = \"ADD_TASK_REQUEST\";\nconst ADD_TASK_SUCCESS = \"ADD_TASK_SUCCESS\";\nconst ADD_TASK_FAILURE = \"ADD_TASK_FAILURE\";\nconst UPDATE_TASK_REQUEST = \"UPDATE_TASK_REQUEST\";\nconst UPDATE_TASK_SUCCESS = \"UPDATE_TASK_SUCCESS\";\nconst UPDATE_TASK_FAILURE = \"UPDATE_TASK_FAILURE\";\nconst DELETE_TASK_REQUEST = \"DELETE_TASK_REQUEST\";\nconst DELETE_TASK_SUCCESS = \"DELETE_TASK_SUCCESS\";\nconst DELETE_TASK_FAILURE = \"DELETE_TASK_FAILURE\";\nconst TOGGLE_TASK_STATUS_REQUEST = \"TOGGLE_TASK_STATUS_REQUEST\";\nconst TOGGLE_TASK_STATUS_SUCCESS = \"TOGGLE_TASK_STATUS_SUCCESS\";\nconst TOGGLE_TASK_STATUS_FAILURE = \"TOGGLE_TASK_STATUS_FAILURE\";\n\n//Action creators\nconst addTaskRequest = () => ({\n  type: ADD_TASK_REQUEST\n});\nconst addTaskSuccess = task => ({\n  type: ADD_TASK_SUCCESS,\n  payload: task\n});\nconst addTaskFailure = error => ({\n  type: ADD_TASK_FAILURE,\n  payload: error\n});\nexport const addTask = task => {\n  return async dispatch => {\n    dispatch(addTaskRequest());\n    try {\n      const response = await axios.post(\"http://localhost:3004/todolist\", task);\n      dispatch(addTaskSuccess(response.data));\n    } catch (error) {\n      dispatch(addTaskFailure(error.message));\n    }\n  };\n};\nconst updateTaskRequest = () => ({\n  type: UPDATE_TASK_REQUEST\n});\nconst updateTaskSuccess = updatedTask => ({\n  type: UPDATE_TASK_SUCCESS,\n  payload: updatedTask\n});\nconst updateTaskFailure = error => ({\n  type: UPDATE_TASK_FAILURE,\n  payload: error\n});\nexport const updatedTask = (taskId, updatedTask) => {\n  return async dispatch => {\n    dispatch(updateTaskRequest());\n    try {\n      const response = await axios.patch(`http://localhost:3004/todolist/${taskId}`, updatedTask);\n      dispatch(updateTaskSuccess(response.data));\n    } catch (error) {\n      dispatch(updateTaskFailure(error.message));\n    }\n  };\n};\nconst deleteTaskRequest = () => ({\n  type: DELETE_TASK_REQUEST\n});\nconst deleteTaskSuccess = taskId => ({\n  type: DELETE_TASK_SUCCESS,\n  payload: taskId\n});\nconst deleteTaskFailure = error => ({\n  type: DELETE_TASK_FAILURE,\n  payload: error\n});\nexport const deleteTask = taskId => {\n  return async dispatch => {\n    dispatch(deleteTaskRequest());\n    try {\n      await axios.delete(`http://localhost:3004/todolist/${taskId}`);\n      dispatch(deleteTaskSuccess(taskId));\n    } catch (error) {\n      dispatch(deleteTaskFailure(error.message));\n    }\n  };\n};\nconst toggleTaskStatusRequest = () => ({\n  type: TOGGLE_TASK_STATUS_REQUEST\n});\nconst toggleTaskStatusSuccess = taskId => ({\n  type: TOGGLE_TASK_STATUS_SUCCESS,\n  payload: taskId\n});\nconst toggleTaskStatusFailure = error => ({\n  type: TOGGLE_TASK_STATUS_FAILURE,\n  payload: error\n});\nexport const toggleTaskStatus = taskId => {\n  return async dispatch => {\n    dispatch(toggleTaskStatusRequest());\n    try {\n      const response = await axios.get(`http://localhost:3004/todolist/${taskId}`);\n      const currentStatus = response.data.completed;\n      await axios.patch(`http://localhost:3004/todolist/${taskId}`, {\n        completed: !currentStatus\n      });\n      dispatch(toggleTaskStatusSuccess(taskId));\n    } catch (error) {\n      dispatch(toggleTaskStatusFailure(error.message));\n    }\n  };\n};\n\n//Initial state\nconst initialState = {\n  todolistData: [],\n  //initial data\n  loading: false,\n  error: null\n};\n\n// Reducer\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TASK_REQUEST:\n    case UPDATE_TASK_REQUEST:\n    case DELETE_TASK_REQUEST:\n    case TOGGLE_TASK_STATUS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case ADD_TASK_SUCCESS:\n      return {\n        ...state,\n        todolistData: [...state.todolistData, action.payload],\n        loading: false\n      };\n    case UPDATE_TASK_SUCCESS:\n      return {\n        ...state,\n        todolistData: state.todolistData.map(task => task.id === action.payload.id ? action.payload : task),\n        loading: false\n      };\n    case DELETE_TASK_SUCCESS:\n      return {\n        ...state,\n        todolistData: state.todolistData.filter(task => task.id !== action.payload),\n        loading: false\n      };\n    case TOGGLE_TASK_STATUS_SUCCESS:\n      return {\n        ...state,\n        todolistData: state.todolistData.map(task => task.id === action.payload ? {\n          ...task,\n          completed: !task.completed\n        } : task),\n        loading: false\n      };\n    case ADD_TASK_FAILURE:\n    case UPDATE_TASK_FAILURE:\n    case DELETE_TASK_FAILURE:\n    case TOGGLE_TASK_STATUS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["axios","thunk","Middleware","ADD_TASK_REQUEST","ADD_TASK_SUCCESS","ADD_TASK_FAILURE","UPDATE_TASK_REQUEST","UPDATE_TASK_SUCCESS","UPDATE_TASK_FAILURE","DELETE_TASK_REQUEST","DELETE_TASK_SUCCESS","DELETE_TASK_FAILURE","TOGGLE_TASK_STATUS_REQUEST","TOGGLE_TASK_STATUS_SUCCESS","TOGGLE_TASK_STATUS_FAILURE","addTaskRequest","type","addTaskSuccess","task","payload","addTaskFailure","error","addTask","dispatch","response","post","data","message","updateTaskRequest","updateTaskSuccess","updatedTask","updateTaskFailure","taskId","patch","deleteTaskRequest","deleteTaskSuccess","deleteTaskFailure","deleteTask","delete","toggleTaskStatusRequest","toggleTaskStatusSuccess","toggleTaskStatusFailure","toggleTaskStatus","get","currentStatus","completed","initialState","todolistData","loading","reducer","state","action","map","id","filter"],"sources":["/home/kumarprince1407/Desktop/React/Redux/ToDoListRedux/to-do-list2/src/redux/reducer.js"],"sourcesContent":["//reducer.js\n//import store from \"../redux/store\";\nimport axios from \"axios\";\n\n//\nimport { thunk } from \"redux-thunk\";\nimport { Middleware } from \"redux\";\n//\n\n// Action types\nconst ADD_TASK_REQUEST = \"ADD_TASK_REQUEST\";\nconst ADD_TASK_SUCCESS = \"ADD_TASK_SUCCESS\";\nconst ADD_TASK_FAILURE = \"ADD_TASK_FAILURE\";\n\nconst UPDATE_TASK_REQUEST = \"UPDATE_TASK_REQUEST\";\nconst UPDATE_TASK_SUCCESS = \"UPDATE_TASK_SUCCESS\";\nconst UPDATE_TASK_FAILURE = \"UPDATE_TASK_FAILURE\";\n\nconst DELETE_TASK_REQUEST = \"DELETE_TASK_REQUEST\";\nconst DELETE_TASK_SUCCESS = \"DELETE_TASK_SUCCESS\";\nconst DELETE_TASK_FAILURE = \"DELETE_TASK_FAILURE\";\n\nconst TOGGLE_TASK_STATUS_REQUEST = \"TOGGLE_TASK_STATUS_REQUEST\";\nconst TOGGLE_TASK_STATUS_SUCCESS = \"TOGGLE_TASK_STATUS_SUCCESS\";\nconst TOGGLE_TASK_STATUS_FAILURE = \"TOGGLE_TASK_STATUS_FAILURE\";\n\n//Action creators\nconst addTaskRequest = () => ({\n  type: ADD_TASK_REQUEST,\n});\n\nconst addTaskSuccess = (task) => ({\n  type: ADD_TASK_SUCCESS,\n  payload: task,\n});\n\nconst addTaskFailure = (error) => ({\n  type: ADD_TASK_FAILURE,\n  payload: error,\n});\n\nexport const addTask = (task) => {\n  return async (dispatch) => {\n    dispatch(addTaskRequest());\n    try {\n      const response = await axios.post(\"http://localhost:3004/todolist\", task);\n      dispatch(addTaskSuccess(response.data));\n    } catch (error) {\n      dispatch(addTaskFailure(error.message));\n    }\n  };\n};\n\nconst updateTaskRequest = () => ({\n  type: UPDATE_TASK_REQUEST,\n});\n\nconst updateTaskSuccess = (updatedTask) => ({\n  type: UPDATE_TASK_SUCCESS,\n  payload: updatedTask,\n});\n\nconst updateTaskFailure = (error) => ({\n  type: UPDATE_TASK_FAILURE,\n  payload: error,\n});\n\nexport const updatedTask = (taskId, updatedTask) => {\n  return async (dispatch) => {\n    dispatch(updateTaskRequest());\n\n    try {\n      const response = await axios.patch(\n        `http://localhost:3004/todolist/${taskId}`,\n        updatedTask\n      );\n      dispatch(updateTaskSuccess(response.data));\n    } catch (error) {\n      dispatch(updateTaskFailure(error.message));\n    }\n  };\n};\n\nconst deleteTaskRequest = () => ({\n  type: DELETE_TASK_REQUEST,\n});\n\nconst deleteTaskSuccess = (taskId) => ({\n  type: DELETE_TASK_SUCCESS,\n  payload: taskId,\n});\n\nconst deleteTaskFailure = (error) => ({\n  type: DELETE_TASK_FAILURE,\n  payload: error,\n});\n\nexport const deleteTask = (taskId) => {\n  return async (dispatch) => {\n    dispatch(deleteTaskRequest());\n\n    try {\n      await axios.delete(`http://localhost:3004/todolist/${taskId}`);\n      dispatch(deleteTaskSuccess(taskId));\n    } catch (error) {\n      dispatch(deleteTaskFailure(error.message));\n    }\n  };\n};\n\nconst toggleTaskStatusRequest = () => ({\n  type: TOGGLE_TASK_STATUS_REQUEST,\n});\n\nconst toggleTaskStatusSuccess = (taskId) => ({\n  type: TOGGLE_TASK_STATUS_SUCCESS,\n  payload: taskId,\n});\n\nconst toggleTaskStatusFailure = (error) => ({\n  type: TOGGLE_TASK_STATUS_FAILURE,\n  payload: error,\n});\n\nexport const toggleTaskStatus = (taskId) => {\n  return async (dispatch) => {\n    dispatch(toggleTaskStatusRequest());\n\n    try {\n      const response = await axios.get(\n        `http://localhost:3004/todolist/${taskId}`\n      );\n      const currentStatus = response.data.completed;\n      await axios.patch(`http://localhost:3004/todolist/${taskId}`, {\n        completed: !currentStatus,\n      });\n      dispatch(toggleTaskStatusSuccess(taskId));\n    } catch (error) {\n      dispatch(toggleTaskStatusFailure(error.message));\n    }\n  };\n};\n\n//Initial state\nconst initialState = {\n  todolistData: [],\n  //initial data\n  loading: false,\n  error: null,\n};\n\n// Reducer\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TASK_REQUEST:\n    case UPDATE_TASK_REQUEST:\n    case DELETE_TASK_REQUEST:\n    case TOGGLE_TASK_STATUS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n\n    case ADD_TASK_SUCCESS:\n      return {\n        ...state,\n        todolistData: [...state.todolistData, action.payload],\n        loading: false,\n      };\n\n    case UPDATE_TASK_SUCCESS:\n      return {\n        ...state,\n        todolistData: state.todolistData.map((task) =>\n          task.id === action.payload.id ? action.payload : task\n        ),\n        loading: false,\n      };\n\n    case DELETE_TASK_SUCCESS:\n      return {\n        ...state,\n        todolistData: state.todolistData.filter(\n          (task) => task.id !== action.payload\n        ),\n        loading: false,\n      };\n\n    case TOGGLE_TASK_STATUS_SUCCESS:\n      return {\n        ...state,\n        todolistData: state.todolistData.map((task) =>\n          task.id === action.payload\n            ? { ...task, completed: !task.completed }\n            : task\n        ),\n        loading: false,\n      };\n\n    case ADD_TASK_FAILURE:\n    case UPDATE_TASK_FAILURE:\n    case DELETE_TASK_FAILURE:\n    case TOGGLE_TASK_STATUS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}