{"ast":null,"code":"var _jsxFileName = \"/home/kumarprince1407/Desktop/React/Redux/ToDoListRedux/to-do-list2/src/components/ToDoList.jsx\",\n  _s = $RefreshSig$();\n//ToDoList.jsx\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport \"./ToDoList.css\";\nimport { Button, InputBase } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport { connect } from \"react-redux\";\nimport { addTask } from \"../redux/actions\"; //write actions\nimport store from \"../redux/store\"; // write store\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList({\n  todolistData,\n  addTask\n}) {\n  _s();\n  const [userInput, setUserInput] = useState({\n    userid: \"\",\n    title: \"\",\n    completed: false\n  });\n  const navigate = useNavigate();\n\n  // useEffect to log the updated state\n  useEffect(() => {\n    console.log(\"Updated state:\", todolistData);\n  }, [todolistData]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    const inputValue = type === \"checkbox\" ? checked : value;\n    setUserInput(prevState => ({\n      ...prevState,\n      //change\n      // [name]: inputValue,\n      [name]: type === \"checkbox\" ? checked : inputValue\n    }));\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    const newItem = {\n      // id: todolistData.length + 1, //math.random\n      //Change\n      id: Math.floor(Math.random() * (1000 - 100 + 1)) + 100,\n      userid: userInput.userid,\n      title: userInput.title,\n      completed: userInput.completed\n    };\n    await addTask(newItem);\n    console.log(\"Task added:\", newItem);\n\n    //console.log(\"Updated state:\", todolistData);\n\n    setUserInput({\n      userid: \"\",\n      title: \"\",\n      completed: false\n    });\n    navigate(\"/home\");\n  };\n  const handleButtonClick = () => {\n    navigate(\"/home\");\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fragment1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headingContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          id: \"heading1\",\n          children: \"ToDoList\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          id: \"button\",\n          onClick: handleButtonClick,\n          children: \"Homepage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"heading2\",\n            children: \"Enter new Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleFormSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"textarea1\",\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Username\",\n                className: \"inputfield\",\n                type: \"text\",\n                name: \"userid\",\n                value: userInput.userid,\n                onChange: handleInputChange,\n                sx: {\n                  width: \"150%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"textarea3\",\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Task details:\",\n                className: \"inputfield\",\n                type: \"text\",\n                name: \"title\",\n                value: userInput.title,\n                onChange: handleInputChange,\n                sx: {\n                  width: \"150%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttonContainer\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"success\",\n                id: \"button1\",\n                type: \"submit\",\n                children: \"Add New Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoList, \"cE0R/DYY42npAkJIwrCt1IDvMJY=\", false, function () {\n  return [useNavigate];\n});\n_c = ToDoList;\nconst mapStateToProps = state => ({\n  todolistData: state.todolistData\n});\nconst mapDispatchToProps = dispatch => ({\n  addTask: newTask => dispatch(addTask(newTask))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ToDoList);\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["axios","React","useState","Button","InputBase","useNavigate","useEffect","TextField","connect","addTask","store","jsxDEV","_jsxDEV","ToDoList","todolistData","_s","userInput","setUserInput","userid","title","completed","navigate","console","log","handleInputChange","e","name","value","type","checked","target","inputValue","prevState","handleFormSubmit","preventDefault","newItem","id","Math","floor","random","handleButtonClick","Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","onClick","onSubmit","htmlFor","label","onChange","sx","width","_c","mapStateToProps","state","mapDispatchToProps","dispatch","newTask","$RefreshReg$"],"sources":["/home/kumarprince1407/Desktop/React/Redux/ToDoListRedux/to-do-list2/src/components/ToDoList.jsx"],"sourcesContent":["//ToDoList.jsx\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport \"./ToDoList.css\";\nimport { Button, InputBase } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nimport TextField from \"@mui/material/TextField\";\nimport { connect } from \"react-redux\";\n\nimport { addTask } from \"../redux/actions\"; //write actions\nimport store from \"../redux/store\"; // write store\n\nfunction ToDoList({ todolistData, addTask }) {\n  const [userInput, setUserInput] = useState({\n    userid: \"\",\n    title: \"\",\n    completed: false,\n  });\n\n  const navigate = useNavigate();\n\n  // useEffect to log the updated state\n  useEffect(() => {\n    console.log(\"Updated state:\", todolistData);\n  }, [todolistData]);\n\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    const inputValue = type === \"checkbox\" ? checked : value;\n\n    setUserInput((prevState) => ({\n      ...prevState,\n      //change\n      // [name]: inputValue,\n      [name]: type === \"checkbox\" ? checked : inputValue,\n    }));\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n\n    const newItem = {\n      // id: todolistData.length + 1, //math.random\n      //Change\n      id: Math.floor(Math.random() * (1000 - 100 + 1)) + 100,\n      userid: userInput.userid,\n      title: userInput.title,\n      completed: userInput.completed,\n    };\n\n    await addTask(newItem);\n    console.log(\"Task added:\", newItem);\n\n    //console.log(\"Updated state:\", todolistData);\n\n    setUserInput({\n      userid: \"\",\n      title: \"\",\n      completed: false,\n    });\n    navigate(\"/home\");\n  };\n\n  const handleButtonClick = () => {\n    navigate(\"/home\");\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"fragment1\">\n        <div className=\"headingContainer\">\n          <h2 id=\"heading1\">ToDoList</h2>\n          <Button\n            variant=\"contained\"\n            color=\"success\"\n            id=\"button\"\n            onClick={handleButtonClick}\n          >\n            Homepage\n          </Button>\n        </div>\n        {/* Form to add new ToDo */}\n        <div className=\"mainContainer\">\n          <div className=\"inputForm\">\n            <h3 id=\"heading2\">Enter new Task</h3>\n\n            <form onSubmit={handleFormSubmit}>\n              <label htmlFor=\"textarea1\">\n                <br />\n                <TextField\n                  label=\"Username\"\n                  className=\"inputfield\"\n                  type=\"text\"\n                  name=\"userid\"\n                  value={userInput.userid}\n                  onChange={handleInputChange}\n                  sx={{ width: \"150%\" }}\n                />\n              </label>\n              <br />\n\n              <br />\n              <label htmlFor=\"textarea3\">\n                <br />\n                <TextField\n                  label=\"Task details:\"\n                  className=\"inputfield\"\n                  type=\"text\"\n                  name=\"title\"\n                  value={userInput.title}\n                  onChange={handleInputChange}\n                  sx={{ width: \"150%\" }}\n                />\n              </label>\n              <br />\n              <br />\n\n              <br />\n              <div className=\"buttonContainer\">\n                <Button\n                  variant=\"contained\"\n                  color=\"success\"\n                  id=\"button1\"\n                  type=\"submit\"\n                >\n                  Add New Task\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  todolistData: state.todolistData,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addTask: (newTask) => dispatch(addTask(newTask)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToDoList);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}